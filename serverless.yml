service: voca-mastery

package:
  excludeDevDependencies: false # serverless-plugin-include-dependencies 플러그인을 사용하기 위해
  exclude:
    - '**/**'
#    - 'tests-integration/**'
#    - '.idea/**'
#    - '.idea/**'
#    - 'serverless-configs/**'
#    - 'support/**'
#    - 'node_modules/.cache/**'
#    - 'src/**'
  include:
    - 'dist/**'
    - 'env/**'

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
#  - serverless-jetpack
  - serverless-plugin-include-dependencies # make your deployed functions smaller. (node_modules를 제외하고 handler가 의존하는 각 모듈 파일을 개별적으로 추가)
  - serverless-plugin-common-excludes


#custom:
#  dotenv:
#    basePath: env

# warmup 플러그인 적용 후 배포하면 에러 발생. 나중에 해결할 것
#  - serverless-plugin-warmup
#
#custom:
#  warmup:
#    mainWarmer:
#      enabled: true
#      events:
#        - schedule: cron(0/5 8-17 ? * MON-FRI *)
#      concurrency: 10

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2
  environment:
  # With the plugin enabled, all variables in .env.development are automatically imported


functions:
  main:
    handler: dist/main.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'
#    warmup: true

#resources:
#  Resources:
#    DB:
#      Type: AWS::RDS::DBInstance
#      Properties:
#        AllocatedStorage: 20
#        DBInstanceClass: db.t3.micro
#        DBInstanceIdentifier: voca-mastery-db
#        PubliclyAccessible: true
#        StorageType: gp2
#        MasterUsername: admin # change
#        MasterUserPassword: 937766wns!2# # change
#        Engine: mysql
#        EngineVersion: 8.0.33

custom:
  dotenv:
    path: ./env/.env.${env:NODE_ENV}
  serverless-offline:
    host: '0.0.0.0' # Vital when operating from within a docker container
    httpPort: ${env:HTTP_PORT, '3000'}
    lambdaPort: ${env:LAMBDA_PORT, '4002'}
    noPrependStageInUrl: true # Don't prepend http routes with the stage. (api 경로에 stage 경로를 추가하지 않음)
